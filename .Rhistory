}
TTM_1m <- 1/12  # 1 month in years
# df has columns: TIME_PERIOD, DATA_TYPE_FM, OBS_VALUE (one row per param per day)
daily_z1m <- Current_year %>%
mutate(
DATA_TYPE_FM = toupper(str_trim(as.character(DATA_TYPE_FM))),
TIME_PERIOD  = as.Date(TIME_PERIOD)
) %>%
filter(DATA_TYPE_FM %in% c("BETA0","BETA1","BETA2","BETA3","TAU1","TAU2")) %>%
distinct(TIME_PERIOD, DATA_TYPE_FM, .keep_all = TRUE) %>%  # de-dup if needed
pivot_wider(names_from = DATA_TYPE_FM, values_from = OBS_VALUE) %>%
arrange(TIME_PERIOD) %>%
mutate(
BETA0 = BETA0 / 100,
BETA1 = BETA1 / 100,
BETA2 = BETA2 / 100,
BETA3 = BETA3 / 100,
z_1m  = nss_z(BETA0, BETA1, BETA2, BETA3, TAU1, TAU2, TTM = 1/12))
# (Optional) plot the daily 1-month zero rate
ggplot(daily_z1m, aes(TIME_PERIOD, z_1m)) +
geom_line() +
geom_hline(yintercept = 0, linetype = "dashed") +
scale_y_continuous(labels = scales::percent_format(accuracy = 0.1)) +
labs(
title = "Daily 1-Month Zero-Coupon Rate from NSS Parameters",
x = "Date", y = "Zero rate (1m, annualized)"
) +
theme_minimal(base_size = 13)
# (Optional) end-of-month series if you prefer monthly observations
z1m_eom <- daily_z1m %>%
group_by(month = floor_date(TIME_PERIOD, "month")) %>%
slice_tail(n = 1) %>%
ungroup() %>%
select(month, z_1m)
ggplot(z1m_eom, aes(month, z_1m)) +
geom_line() +
geom_hline(yintercept = 0, linetype = "dashed") +
scale_y_continuous(labels = scales::percent_format(accuracy = 0.1)) +
labs(
title = "1-Month Zero-Coupon Rate from NSS Parameters",
x = "Date", y = "Zero rate (1m, annualized)"
) +
theme_minimal(base_size = 13)
z1m_period <- z1m_eom
z1m_period$z_1m <- exp(z1m_period$z_1m)-1
ggplot(z1m_period, aes(month, z_1m)) +
geom_line() +
geom_hline(yintercept = 0, linetype = "dashed") +
scale_y_continuous(labels = scales::percent_format(accuracy = 0.1)) +
labs(
title = "1-Month Zero-Coupon Rate from NSS Parameters",
x = "Date", y = "Zero rate (1m, annualized)"
) +
theme_minimal(base_size = 13)
daily_z1m <- daily_z1m %>%
mutate(RF_1m = exp(z_1m * (1/12)) - 1)
# End-of-month RF series, if you prefer monthly observations
library(lubridate)
RF_eom <- daily_z1m %>%
group_by(month = floor_date(TIME_PERIOD, "month")) %>%
slice_tail(n = 1) %>%
ungroup() %>%
select(month, z_1m, RF_1m)
daily_z1m <- daily_z1m %>%
mutate(RF_1m = exp(z_1m * (1/12)) - 1)
# End-of-month RF series, if you prefer monthly observations
RF_eom <- daily_z1m %>%
group_by(month = floor_date(TIME_PERIOD, "month")) %>%
slice_tail(n = 1) %>%
ungroup() %>%
select(month, z_1m, RF_1m)
RF_eom
# (Optional) plot the compounded 1-month zero rate
ggplot(daily_z1m, aes(TIME_PERIOD, RF_1m)) +
geom_line() +
geom_hline(yintercept = 0, linetype = "dashed") +
scale_y_continuous(labels = scales::percent_format(accuracy = 0.1)) +
labs(
title = "1-Month Zero-Coupon Rate from NSS Parameters",
x = "Date", y = "Zero rate (1m, annualized)"
) +
theme_minimal(base_size = 13)
# (Optional) plot the compounded 1-month zero rate
ggplot(RF_eom, aes(x = month, y = RF_1m)) +
geom_line(color = "steelblue", linewidth = 1) +
geom_hline(yintercept = 0, linetype = "dashed", color = "gray50") +
scale_y_continuous(labels = scales::percent_format(accuracy = 0.01)) +
labs(
title = "EUR Risk-Free Rate (1-Month Zero-Coupon, Continuously Compounded)",
subtitle = "Derived from Svensson zero-coupon curve parameters",
x = "Date",
y = "Monthly risk-free return"
) +
theme_minimal(base_size = 13)
RF_eom
Current_year <- read_csv("~/Documents/Uni/5. År/Asset Allocation (PUK)/Current_year.csv")
Current_year <- Current_year %>%
select(DATA_TYPE_FM, TIME_PERIOD, OBS_VALUE)
nss_z <- function(beta0, beta1, beta2, beta3 = 0, tau1, tau2 = Inf, TTM) {
h  <- function(T, tau) ifelse(T == 0, 1, (1 - exp(-T / tau)) / (T / tau))
t1 <- h(TTM, tau1)
t2 <- t1 - exp(-TTM / tau1)
t3 <- ifelse(is.finite(tau2),
h(TTM, tau2) - exp(-TTM / tau2),
0)
beta0 + beta1 * t1 + beta2 * t2 + beta3 * t3
}
TTM_1m <- 1/12  # 1 month in years
# df has columns: TIME_PERIOD, DATA_TYPE_FM, OBS_VALUE (one row per param per day)
daily_z1m <- Current_year %>%
mutate(
DATA_TYPE_FM = toupper(str_trim(as.character(DATA_TYPE_FM))),
TIME_PERIOD  = as.Date(TIME_PERIOD)
) %>%
filter(DATA_TYPE_FM %in% c("BETA0","BETA1","BETA2","BETA3","TAU1","TAU2")) %>%
distinct(TIME_PERIOD, DATA_TYPE_FM, .keep_all = TRUE) %>%  # de-dup if needed
pivot_wider(names_from = DATA_TYPE_FM, values_from = OBS_VALUE) %>%
arrange(TIME_PERIOD) %>%
mutate(
BETA0 = BETA0 / 100,
BETA1 = BETA1 / 100,
BETA2 = BETA2 / 100,
BETA3 = BETA3 / 100,
z_1m  = nss_z(BETA0, BETA1, BETA2, BETA3, TAU1, TAU2, TTM = 1/12))
# (Optional) plot the daily 1-month zero rate
ggplot(daily_z1m, aes(TIME_PERIOD, z_1m)) +
geom_line() +
geom_hline(yintercept = 0, linetype = "dashed") +
scale_y_continuous(labels = scales::percent_format(accuracy = 0.1)) +
labs(
title = "Daily 1-Month Zero-Coupon Rate from NSS Parameters",
x = "Date", y = "Zero rate (1m, annualized)"
) +
theme_minimal(base_size = 13)
# Compounded (exponential)
daily_z1m <- daily_z1m %>%
mutate(RF_1m = exp(z_1m * (1/12)) - 1)
# End-of-month RF series, if you prefer monthly observations
RF_eom <- daily_z1m %>%
group_by(month = floor_date(TIME_PERIOD, "month")) %>%
slice_tail(n = 1) %>%
ungroup() %>%
select(month, z_1m, RF_1m)
# (Optional) plot the compounded 1-month zero rate
ggplot(RF_eom, aes(x = month, y = RF_1m)) +
geom_line(color = "steelblue", linewidth = 1) +
geom_hline(yintercept = 0, linetype = "dashed", color = "gray50") +
scale_y_continuous(labels = scales::percent_format(accuracy = 0.01)) +
labs(
title = "EUR Risk-Free Rate (1-Month Zero-Coupon, Continuously Compounded)",
subtitle = "Derived from Svensson zero-coupon curve parameters",
x = "Date",
y = "Monthly risk-free return"
) +
theme_minimal(base_size = 13)
# (Optional) end-of-month series if you prefer monthly observations
z1m_eom <- daily_z1m %>%
group_by(month = floor_date(TIME_PERIOD, "month")) %>%
slice_tail(n = 1) %>%
ungroup() %>%
select(month, z_1m)
ggplot(z1m_eom, aes(month, z_1m)) +
geom_line() +
geom_hline(yintercept = 0, linetype = "dashed") +
scale_y_continuous(labels = scales::percent_format(accuracy = 0.1)) +
labs(
title = "1-Month Zero-Coupon Rate from NSS Parameters",
x = "Date", y = "Zero rate (1m, annualized)"
) +
theme_minimal(base_size = 13)
size_mom_6_euro
size_mom_6_euro$subsets$data
size_mom_6_euro$subsets$data[[1]]
df <- size_mom_6_euro$subsets$data[[1]]
size_mom_6_euro$subsets$data[[1]]
df <- size_mom_6_euro$subsets$data[[1]] %>% filter(date>=20040901)
View(df)
size_mom_6_euro$subsets$data[[1]]
df <- size_mom_6_euro$subsets$data[[1]] %>% filter(date >= 200409)
View(df)
View(monthly)
View(df)
df
df <- size_mom_6_euro$subsets$data[[1]] %>% filter(date >= 200409)
r <- filter(size_mom_6_euro$subsets$data[[1]], date >= 200409)[,2:ncol(size_mom_6_euro$subsets$data[[1]])]
n <- filter(size_mom_6_euro$subsets$data[[5]], date >= 200409)[,2:ncol(size_mom_6_euro$subsets$data[[5]])]
a <- filter(size_mom_6_euro$subsets$data[[6]], date >= 200409)[,2:ncol(size_mom_6_euro$subsets$data[[6]])]
total_returns_6_euro <- tibble(date = size_mom_6_euro$subsets$data[[1]]$date[size_mom_6_euro$subsets$data[[1]]$date >= 200409],
r*n*a)
total_returns_6_euro %>%
mutate(date = ym(date)) %>%
pivot_longer(cols = -date,
names_to = "group",
values_to = "value") %>%
ggplot(aes(date, value, color = group)) +
geom_line() +
facet_wrap(~group, scales = "free") +
theme(legend.position = "bottom")
total_returns_6_euro
total_returns_6_euro <- total_returns_6_euro[,-1] * 1/monthly$USD[1:252]
total_returns_6_euro
# total returns givet i mio. EUR
colSums(total_returns_6_euro[,-1])/10^6
total_returns_6_euro
# total returns givet i mio. EUR
colSums(total_returns_6_euro)/10^6
size_mom_6$subsets$name # De forskellige datasets
# Plot af de forskellige dataset i size_mom_6
k <- 6
filter(size_mom_6$subsets$data[[k]], date >= 200409) %>%
mutate(date = ym(date)) %>%
pivot_longer(cols = -date,
names_to = "group",
values_to = "value") %>%
ggplot(aes(date, value, color = group)) +
geom_line() +
facet_wrap(~group, scales = "free") +
theme(legend.position = "bottom") +
ggtitle(size_mom_6$subsets$name[k])
# Total return
# Ved ikke lige hvordan dette skulle regnes, men ud fra hint og at det er givet som et vægtet gennemsnit kunne det være dette
# r er Average Value Weighted Returns -- Monthly
# n er Number of Firms in Portfolios
# a er Average Firm Size (market cap)
r <- filter(size_mom_6$subsets$data[[1]], date >= 200409)[,2:ncol(size_mom_6$subsets$data[[1]])]
n <- filter(size_mom_6$subsets$data[[5]], date >= 200409)[,2:ncol(size_mom_6$subsets$data[[5]])]
a <- filter(size_mom_6$subsets$data[[6]], date >= 200409)[,2:ncol(size_mom_6$subsets$data[[6]])]
total_returns_6 <- tibble(date = size_mom_6$subsets$data[[1]]$date[size_mom_6$subsets$data[[1]]$date >= 200409],
r*n*a)
total_returns_6 %>%
mutate(date = ym(date)) %>%
pivot_longer(cols = -date,
names_to = "group",
values_to = "value") %>%
ggplot(aes(date, value, color = group)) +
geom_line() +
facet_wrap(~group, scales = "free") +
theme(legend.position = "bottom")
# samlet return over hele perioden givet i mio. USD
colSums(total_returns_6[,2:7])/10^6
# gennemsnitlige firm size i perioden
colMeans(filter(size_mom_6$subsets$data[[6]], date >= 200409)[, 2:length(filter(size_mom_6$subsets$data[[6]], date >= 200409))])
total_returns_6
# samlet return over hele perioden givet i mio. USD
colSums(total_returns_6[,-1])/10^6
View(exchange_rate)
ff_3_factors
ff_3_factors$subsets$data
ff_3_factors$subsets$name
View(ff_3_factors)
ff_3_factors
ff_3_factors$subsets$data
USD_RF <- ff_3_factors$subsets$data[[1]]$RF
RF_eom
USD_RF
USD_RF <- ff_3_factors$subsets$data[[1]][,c("date","RF")]
USD_RF
USD_RF <- ff_3_factors$subsets$data[[1]][,c("date","RF")] %>%
filter(date >= 200409)
USD_RF
RF_eom
USD_RF$RF[(252-11):252]
USD_RF[(252-11):252,]
USD_RF[(252-6):252,]
USD_RF[(252-7):252,]
RF_eom
RF_eom[1:8,]
RF_eom[1:8,]$RF_1m
RF_eom[1:8,]$RF_1m*100
USD_RF[(252-7):252,]
USD_RF[(252-7):252,]$rf
USD_RF[(252-7):252,]$RF
RF_eom[1:8,]$RF_1m*100
USD_RF[(252-7):252,]$RF
RF_eom[1:8,]$RF_1m*100
USD_RF[(200):252,]$RF
View(total_returns_6)
# 1 er månedlig
# 2 er årlig
# Hvis månedlig skal mutate(date = ym(date)) være med
ff_3_factors$subsets$data[[1]] %>%
mutate(date = ym(date)) %>%
pivot_longer(cols = -date,
names_to = "factor",
values_to = "value") %>%
ggplot(data = .,
mapping = aes(x = date, y = value,
group = factor,
color = factor)) +
geom_line() +
facet_wrap(~factor, scales = "free")
# histogram
ff_3_factors$subsets$data[[1]] %>%
mutate(date = ym(date)) %>%
pivot_longer(cols = -date,
names_to = "factor",
values_to = "value") %>%
ggplot(data = .,
mapping = aes(y = value,
group = factor,
fill = factor)) +
geom_histogram(color = "white") +
facet_wrap(~factor, scales = "free") +
coord_flip()
ff_3_factors
ff_3_factors$subsets
ff_3_factors$subsets$data
size_mom_6$subsets$data[[1]] %>%
mutate(date = ym(date)) %>%
pivot_longer(cols = -date,
names_to = "type",
values_to = "value") %>%
ggplot(data = .,
aes(x = date, y = value,
group = type,
color = type)) +
geom_line() +
facet_wrap(~type, scales = "free")
# histogram
size_mom_6$subsets$data[[1]] %>%
pivot_longer(cols = -date,
names_to = "type",
values_to = "value") %>%
ggplot(data = .,
aes(y = value,
group = type,
fill = type)) +
geom_histogram(color = "white") +
facet_wrap(~type, scales = "free") +
coord_flip()
size_mom_6$subsets$name # De forskellige datasets
# Plot af de forskellige dataset i size_mom_6
k <- 6
filter(size_mom_6$subsets$data[[k]], date >= 200409) %>%
mutate(date = ym(date)) %>%
pivot_longer(cols = -date,
names_to = "group",
values_to = "value") %>%
ggplot(aes(date, value, color = group)) +
geom_line() +
facet_wrap(~group, scales = "free") +
theme(legend.position = "bottom") +
ggtitle(size_mom_6$subsets$name[k])
# Total return
# Ved ikke lige hvordan dette skulle regnes, men ud fra hint og at det er givet som et vægtet gennemsnit kunne det være dette
# r er Average Value Weighted Returns -- Monthly
# n er Number of Firms in Portfolios
# a er Average Firm Size (market cap)
r <- filter(size_mom_6$subsets$data[[1]], date >= 200409)[,2:ncol(size_mom_6$subsets$data[[1]])]
n <- filter(size_mom_6$subsets$data[[5]], date >= 200409)[,2:ncol(size_mom_6$subsets$data[[5]])]
a <- filter(size_mom_6$subsets$data[[6]], date >= 200409)[,2:ncol(size_mom_6$subsets$data[[6]])]
total_returns_6 <- tibble(date = size_mom_6$subsets$data[[1]]$date[size_mom_6$subsets$data[[1]]$date >= 200409],
r*n*a)
total_returns_6 %>%
mutate(date = ym(date)) %>%
pivot_longer(cols = -date,
names_to = "group",
values_to = "value") %>%
ggplot(aes(date, value, color = group)) +
geom_line() +
facet_wrap(~group, scales = "free") +
theme(legend.position = "bottom")
# samlet return over hele perioden givet i mio. USD
colSums(total_returns_6[,-1])/10^6
# gennemsnitlige firm size i perioden
colMeans(filter(size_mom_6$subsets$data[[6]], date >= 200409)[, 2:length(filter(size_mom_6$subsets$data[[6]], date >= 200409))])
13.65303      67.35745      96.60903     274.06578     812.65279     543.42334
size_mom_6$subsets$name # De forskellige datasets
# Plot af de forskellige dataset i size_mom_6
k <- 6
filter(size_mom_6$subsets$data[[k]], date >= 200409) %>%
mutate(date = ym(date)) %>%
pivot_longer(cols = -date,
names_to = "group",
values_to = "value") %>%
ggplot(aes(date, value, color = group)) +
geom_line() +
facet_wrap(~group, scales = "free") +
theme(legend.position = "bottom") +
ggtitle(size_mom_6$subsets$name[k])
# Total return
# Ved ikke lige hvordan dette skulle regnes, men ud fra hint og at det er givet som et vægtet gennemsnit kunne det være dette
# r er Average Value Weighted Returns -- Monthly
# n er Number of Firms in Portfolios
# a er Average Firm Size (market cap)
r <- filter(size_mom_6$subsets$data[[1]], date >= 200409)[,2:ncol(size_mom_6$subsets$data[[1]])]
n <- filter(size_mom_6$subsets$data[[5]], date >= 200409)[,2:ncol(size_mom_6$subsets$data[[5]])]
a <- filter(size_mom_6$subsets$data[[6]], date >= 200409)[,2:ncol(size_mom_6$subsets$data[[6]])]
total_returns_6 <- tibble(date = size_mom_6$subsets$data[[1]]$date[size_mom_6$subsets$data[[1]]$date >= 200409],
r*n*a)
total_returns_6 %>%
mutate(date = ym(date)) %>%
pivot_longer(cols = -date,
names_to = "group",
values_to = "value") %>%
ggplot(aes(date, value, color = group)) +
geom_line() +
facet_wrap(~group, scales = "free") +
theme(legend.position = "bottom")
# samlet return over hele perioden givet i mio. USD
colSums(total_returns_6[,-1])/10^6
# gennemsnitlige firm size i perioden
colMeans(filter(size_mom_6$subsets$data[[6]], date >= 200409)[, 2:length(filter(size_mom_6$subsets$data[[6]], date >= 200409))])
total_returns_6
# Plot af de forskellige dataset i size_mom_6
k <- 6
filter(size_mom_6$subsets$data[[k]], date >= 200409) %>%
mutate(date = ym(date)) %>%
pivot_longer(cols = -date,
names_to = "group",
values_to = "value") %>%
ggplot(aes(date, value, color = group)) +
geom_line() +
facet_wrap(~group, scales = "free") +
theme(legend.position = "bottom") +
ggtitle(size_mom_6$subsets$name[k])
size_mom_6$subsets$data
size_mom_6$subsets$name # De forskellige datasets
size_mom_6$subsets$data[2]
size_mom_6$subsets$data[2]
y.df <- size_mom_6$subsets$data[2] %>% filter(date >= 200409)
size_mom_6$subsets$data[2]
size_mom_6$subsets$data[[2]]
y.df <- size_mom_6$subsets$data[[2]] %>% filter(date >= 200409)
y.df
y.df <- size_mom_6$subsets$data[[2]] %>%
filter(date >= 200409) %>%
select("SMALL LoPRIOR")
y.df
y.df <- size_mom_6$subsets$data[[2]] %>%
filter(date >= 200409) %>%
select("Date","SMALL LoPRIOR")
y.df <- size_mom_6$subsets$data[[2]] %>%
filter(date >= 200409) %>%
select(c("Date","SMALL LoPRIOR"))
y.df
size_mom_6$subsets$data[[2]]
y.df <- size_mom_6$subsets$data[[2]] %>%
filter(date >= 200409) %>%
select(c("date","SMALL LoPRIOR"))
y.df
ff_3_factors$subsets$data
x.df <- ff_3_factors$subsets$data %>%
filter(date >= 200409)
x.df <- ff_3_factors$subsets$data[[1]] %>%
filter(date >= 200409)
x.df
reg.df <- left_join(y.df,x.df, by = "date")
reg.df
reg.df <- left_join(y.df,x.df, by = "date") %>%
mutate(y = ´SMALL LoPRIOR´ - RF)
reg.df <- left_join(y.df,x.df, by = "date") %>%
mutate(y = `SMALL LoPRIOR` - RF)
reg.df
y.df <- size_mom_6$subsets$data[[2]] %>%
filter(date >= 200409) %>%
select(c("date","SMALL LoPRIOR"))
x.df <- ff_3_factors$subsets$data[[1]] %>%
filter(date >= 200409)
reg.df <- left_join(y.df,x.df, by = "date") %>%
mutate(`SMALL LoPRIOR` = `SMALL LoPRIOR` - RF)
reg.df
y.df
reg.df
reg.df <- left_join(y.df,x.df, by = "date") %>%
mutate(excess_R = `SMALL LoPRIOR` - RF,
excess_MKT = `Mkt-RF`)
ff_model <- lm(excess_R ~ excess_MKT + SMB + MOM, data = reg.df)
reg.df
ff_model <- lm(excess_R ~ excess_MKT + SMB, data = reg.df)
summary(ff_model)
library(lmtest)
library(sandwich)
ff_model <- lm(excess_R ~ excess_MKT + SMB + MOM, data = reg.df)
library(lmtest)
ff_model <- lm(excess_R ~ excess_MKT + SMB, data = reg.df)
library(lmtest)
library(sandwich)
coeftest(ff_model, vcov = NeweyWest(ff_model, lag = 3))
summary(ff_model)
x.df
size_mom_6$subsets$data
size_mom_6$subsets$name
size_mom_6$subsets$date[[2]]
size_mom_6$subsets$data[[2]]
size_mom_6$subsets$data[[2]]
size_mom_6$subsets$data[[2]]
MOM <- size_mom_6$subsets$data[[2]] %>%
filter(date >= 200409) %>%
mutate(MOM = 1/2 * (`SMALL HiPRIOR` + `BIG HiPRIOR`) - 1/2 * (`BIG LoPRIOR` + `SMALL LoPRIOR`))$MOM
MOM
size_mom_6$subsets$data[[2]] %>%
filter(date >= 200409) %>%
mutate(MOM = 1/2 * (`SMALL HiPRIOR` + `BIG HiPRIOR`) - 1/2 * (`BIG LoPRIOR` + `SMALL LoPRIOR`))
MOM.df <- size_mom_6$subsets$data[[2]] %>%
filter(date >= 200409) %>%
mutate(MOM = 1/2 * (`SMALL HiPRIOR` + `BIG HiPRIOR`) - 1/2 * (`BIG LoPRIOR` + `SMALL LoPRIOR`))
y.df <- size_mom_6$subsets$data[[2]] %>%
filter(date >= 200409) %>%
select(c("date","SMALL LoPRIOR"))
MOM.df <- size_mom_6$subsets$data[[2]] %>%
filter(date >= 200409) %>%
mutate(MOM = 1/2 * (`SMALL HiPRIOR` + `BIG HiPRIOR`) - 1/2 * (`BIG LoPRIOR` + `SMALL LoPRIOR`))
reg.df <- left_join(y.df,x.df, by = "date") %>%
mutate(excess_R = `SMALL LoPRIOR` - RF,
excess_MKT = `Mkt-RF`,
MOM = MOM.df$MOM)
ff_model <- lm(excess_R ~ excess_MKT + SMB + MOM, data = reg.df)
library(lmtest)
library(sandwich)
summary(ff_model)
coeftest(ff_model, vcov = NeweyWest(ff_model, lag = 3))
