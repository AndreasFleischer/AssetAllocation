}
print("cumulative return")
apply(h$returns_out_of_bag, 2, cum_return)[208,]
cum_return(returns_choice$return)[208]
print("mean return")
((1+colMeans(h$returns_out_of_bag/100))^12-1)*100
((1+mean(returns_choice$return/100))^12-1)*100
print("volatilitet")
sd_short_out_bag
sd(returns_choice$return)
returns_choice <- readRDS("returns_choice.rds")
alpha <- 1
h <- optimize_with_shorting(alpha, returns_all)
apply(h$returns_out_of_bag, 2, cum_return) %>%
as_tibble() %>%
cbind(tibble(date = 1:208)) %>%
pivot_longer(cols = -date, names_to = "Portfolio", values_to = "cum_return") %>% ggplot(aes(date, cum_return, color = Portfolio)) +
geom_line()
var_short_in_bag <- array(NA, c(208, 22))
sd_short_out_bag <- rep(NA, 22)
for(j in 1:22){
for(i in 1:208){
var_short_in_bag[i,j] <- t(h$w[j,i,])%*%h$Sigma[i,,]%*%h$w[j,i,]
}
sd_short_out_bag[j] <- sd(unlist(h$returns_out_of_bag[,j]))
}
print("cumulative return")
apply(h$returns_out_of_bag, 2, cum_return)[208,]
cum_return(returns_choice$return)[208]
print("mean return")
((1+colMeans(h$returns_out_of_bag/100))^12-1)*100
((1+mean(returns_choice$return/100))^12-1)*100
print("volatilitet")
sd_short_out_bag
sd(returns_choice$return)
var_short
var_short_in_bag
target_variance
var_short_in_bag <= target_variance
rowSums(var_short_in_bag <= target_variance)
index_target_var <- rowSums(var_short_in_bag <= target_variance)
h$w[,index_target_var]
h$w
h$w[index_target_var,,]
h$w[1,,]
h$w[index_target_var,,]
w_target_var <- arracy(NA, c(208, 6))
w_target_var <- array(NA, c(208, 6))
for(i in 1:208){
w_target_var[i,] <- h$w[index_target_var, i,]
}
h$w[index_target_var, i,]
for(i in 1:208){
w_target_var[i,] <- h$w[index_target_var[i], i,]
}
w_target_var
returns_all
optimize_with_shorting <- function(alpha, returns){
excess_returns <- sweep(returns, 1, returns$RF, "-")
returns_tmp <- excess_returns %>%
# mutate(
#   SMB_US = SMB_US + alpha*RF,
#   MOM_US = MOM_US + alpha*RF,
#   SMB_EU = SMB_EU + alpha*RF,
#   MOM_EU = MOM_EU + alpha*RF
# ) %>%
select(-RF)
factor_names <- colnames(returns_tmp[,-1])
n_assets <- ncol(returns_tmp[,-1])
n <- nrow(returns_tmp) - 35 - 1
w_min_var <- matrix(NA, nrow = n, ncol = n_assets)
w_max_return <- matrix(NA, nrow = n, ncol = n_assets)
n_internal <- 20
w_internal <- array(NA, dim = c(n_internal, n, n_assets))
target_returns <- array(NA, c(n, n_internal))
Sigma <- array(NA, c(n, n_assets, n_assets))
mu <- array(NA, c(n, n_assets))
for(i in 1:n){
returns_period <- returns_tmp[i:(i+35),-1]
mu[i,] <- colMeans(returns_period)
Sigma[i,,] <- cov(returns_period)
w_min_var[i,] <- optimize_portfolio_shorting(mu[i,], Sigma[i,,], alpha)
w_max_return[i,] <- optimize_return_shorting(mu[i,], alpha)
return_min_var <- sum(mu[i,]*w_min_var[i,])
return_max_return <- sum(mu[i,]*w_max_return[i,])
target_returns_tmp <- seq(return_min_var, return_max_return, (return_max_return - return_min_var)/(n_internal+1))
target_returns[i,] <- target_returns_tmp[-c(1, length(target_returns_tmp))]
for(j in 1:length(target_returns[i,])){
w_internal[j,i,] <- optimize_internal_shorting(mu[i,], Sigma[i,,], target_returns[i,j], alpha)
}
}
w = array(NA, c(n_internal+2, dim(w_min_var)[1], dim(w_min_var)[2]))
w[1,,] <- w_min_var
w[2:(n_internal+1),,] <- w_internal
w[(n_internal+2),,] <- w_max_return
current_dimnames <- dimnames(w)
current_dimnames[[3]] <- factor_names
dimnames(w) <- current_dimnames
factors_out_of_bag <- returns[37:nrow(returns),]
returns_out_of_bag <- returns_in_bag <-array(NA, c(n, dim(w)[[1]]))
for(i in 1:dim(w)[[1]]){
returns_out_of_bag[,i] <- rowSums(w[i,,]*factors_out_of_bag[,2:7]) + rowSums(alpha*w[i,,c("SMB_US","MOM_US", "SMB_EU", "MOM_EU")])*factors_out_of_bag[,"RF"]
returns_in_bag[,i] <- rowSums(w[i,,]*mu) + rowSums(alpha*w[i,,c("SMB_US","MOM_US", "SMB_EU", "MOM_EU")])*returns[36:(nrow(returns)-1),"RF"]
}
Portfolio_names <- c("GMV", paste("Point", 1:n_internal, sep = " "), "Max_return")
returns_in_bag <- as_tibble(returns_in_bag)
returns_out_of_bag <- as_tibble(returns_out_of_bag)
colnames(returns_in_bag) <- Portfolio_names
colnames(returns_out_of_bag) <- Portfolio_names
return(
list(
"w" = w,
"returns_in_bag" = returns_in_bag,
"returns_out_of_bag" = returns_out_of_bag,
"Sigma" = Sigma,
"mu" = mu
)
)
}
returns_choice <- readRDS("returns_choice.rds")
alpha <- 1
h <- optimize_with_shorting(alpha, returns_all)
apply(h$returns_out_of_bag, 2, cum_return) %>%
as_tibble() %>%
cbind(tibble(date = 1:208)) %>%
pivot_longer(cols = -date, names_to = "Portfolio", values_to = "cum_return") %>% ggplot(aes(date, cum_return, color = Portfolio)) +
geom_line()
var_short_in_bag <- array(NA, c(208, 22))
sd_short_out_bag <- rep(NA, 22)
for(j in 1:22){
for(i in 1:208){
var_short_in_bag[i,j] <- t(h$w[j,i,])%*%h$Sigma[i,,]%*%h$w[j,i,]
}
sd_short_out_bag[j] <- sd(unlist(h$returns_out_of_bag[,j]))
}
print("cumulative return")
apply(h$returns_out_of_bag, 2, cum_return)[208,]
cum_return(returns_choice$return)[208]
print("mean return")
((1+colMeans(h$returns_out_of_bag/100))^12-1)*100
((1+mean(returns_choice$return/100))^12-1)*100
print("volatilitet")
sd_short_out_bag
sd(returns_choice$return)
index_target_var <- rowSums(var_short_in_bag <= target_variance)
w_target_var <- array(NA, c(208, 6))
for(i in 1:208){
w_target_var[i,] <- h$w[index_target_var[i], i,]
}
filter(returns_all, date >= 200709)[2:7]*w_target_var
mu
optimize_with_shorting <- function(alpha, returns){
excess_returns <- sweep(returns, 1, returns$RF, "-")
returns_tmp <- excess_returns %>%
# mutate(
#   SMB_US = SMB_US + alpha*RF,
#   MOM_US = MOM_US + alpha*RF,
#   SMB_EU = SMB_EU + alpha*RF,
#   MOM_EU = MOM_EU + alpha*RF
# ) %>%
select(-RF)
factor_names <- colnames(returns_tmp[,-1])
n_assets <- ncol(returns_tmp[,-1])
n <- nrow(returns_tmp) - 35 - 1
w_min_var <- matrix(NA, nrow = n, ncol = n_assets)
w_max_return <- matrix(NA, nrow = n, ncol = n_assets)
n_internal <- 20
w_internal <- array(NA, dim = c(n_internal, n, n_assets))
target_returns <- array(NA, c(n, n_internal))
Sigma <- array(NA, c(n, n_assets, n_assets))
mu <- array(NA, c(n, n_assets))
for(i in 1:n){
returns_period <- returns_tmp[i:(i+35),-1]
mu[i,] <- colMeans(returns_period)
Sigma[i,,] <- cov(returns_period)
w_min_var[i,] <- optimize_portfolio_shorting(mu[i,], Sigma[i,,], alpha)
w_max_return[i,] <- optimize_return_shorting(mu[i,], alpha)
return_min_var <- sum(mu[i,]*w_min_var[i,])
return_max_return <- sum(mu[i,]*w_max_return[i,])
target_returns_tmp <- seq(return_min_var, return_max_return, (return_max_return - return_min_var)/(n_internal+1))
target_returns[i,] <- target_returns_tmp[-c(1, length(target_returns_tmp))]
for(j in 1:length(target_returns[i,])){
w_internal[j,i,] <- optimize_internal_shorting(mu[i,], Sigma[i,,], target_returns[i,j], alpha)
}
}
w = array(NA, c(n_internal+2, dim(w_min_var)[1], dim(w_min_var)[2]))
w[1,,] <- w_min_var
w[2:(n_internal+1),,] <- w_internal
w[(n_internal+2),,] <- w_max_return
current_dimnames <- dimnames(w)
current_dimnames[[3]] <- factor_names
dimnames(w) <- current_dimnames
factors_out_of_bag <- returns[37:nrow(returns),]
returns_out_of_bag <- returns_in_bag <-array(NA, c(n, dim(w)[[1]]))
for(i in 1:dim(w)[[1]]){
returns_out_of_bag[,i] <- rowSums(w[i,,]*factors_out_of_bag[,2:7]) + rowSums(alpha*w[i,,c("SMB_US","MOM_US", "SMB_EU", "MOM_EU")])*factors_out_of_bag[,"RF"]
returns_in_bag[,i] <- rowSums(w[i,,]*mu) + rowSums(alpha*w[i,,c("SMB_US","MOM_US", "SMB_EU", "MOM_EU")])*returns[36:(nrow(returns)-1),"RF"]
}
Portfolio_names <- c("GMV", paste("Point", 1:n_internal, sep = " "), "Max_return")
returns_in_bag <- as_tibble(returns_in_bag)
returns_out_of_bag <- as_tibble(returns_out_of_bag)
colnames(returns_in_bag) <- Portfolio_names
colnames(returns_out_of_bag) <- Portfolio_names
return(
list(
"w" = w,
"returns_in_bag" = returns_in_bag,
"returns_out_of_bag" = returns_out_of_bag,
"Sigma" = Sigma,
"mu" = mu,
"RF" = RF
)
)
}
returns_choice <- readRDS("returns_choice.rds")
alpha <- 1
h <- optimize_with_shorting(alpha, returns_all)
optimize_with_shorting <- function(alpha, returns){
excess_returns <- sweep(returns, 1, returns$RF, "-")
returns_tmp <- excess_returns %>%
# mutate(
#   SMB_US = SMB_US + alpha*RF,
#   MOM_US = MOM_US + alpha*RF,
#   SMB_EU = SMB_EU + alpha*RF,
#   MOM_EU = MOM_EU + alpha*RF
# ) %>%
select(-RF)
factor_names <- colnames(returns_tmp[,-1])
n_assets <- ncol(returns_tmp[,-1])
n <- nrow(returns_tmp) - 35 - 1
w_min_var <- matrix(NA, nrow = n, ncol = n_assets)
w_max_return <- matrix(NA, nrow = n, ncol = n_assets)
RF <- rep(NA, n)
n_internal <- 20
w_internal <- array(NA, dim = c(n_internal, n, n_assets))
target_returns <- array(NA, c(n, n_internal))
Sigma <- array(NA, c(n, n_assets, n_assets))
mu <- array(NA, c(n, n_assets))
for(i in 1:n){
RF[i] <- mean(returns$RF[i:(i+35)])
returns_period <- returns_tmp[i:(i+35),-1]
mu[i,] <- colMeans(returns_period)
Sigma[i,,] <- cov(returns_period)
w_min_var[i,] <- optimize_portfolio_shorting(mu[i,], Sigma[i,,], alpha)
w_max_return[i,] <- optimize_return_shorting(mu[i,], alpha)
return_min_var <- sum(mu[i,]*w_min_var[i,])
return_max_return <- sum(mu[i,]*w_max_return[i,])
target_returns_tmp <- seq(return_min_var, return_max_return, (return_max_return - return_min_var)/(n_internal+1))
target_returns[i,] <- target_returns_tmp[-c(1, length(target_returns_tmp))]
for(j in 1:length(target_returns[i,])){
w_internal[j,i,] <- optimize_internal_shorting(mu[i,], Sigma[i,,], target_returns[i,j], alpha)
}
}
w = array(NA, c(n_internal+2, dim(w_min_var)[1], dim(w_min_var)[2]))
w[1,,] <- w_min_var
w[2:(n_internal+1),,] <- w_internal
w[(n_internal+2),,] <- w_max_return
current_dimnames <- dimnames(w)
current_dimnames[[3]] <- factor_names
dimnames(w) <- current_dimnames
factors_out_of_bag <- returns[37:nrow(returns),]
returns_out_of_bag <- returns_in_bag <-array(NA, c(n, dim(w)[[1]]))
for(i in 1:dim(w)[[1]]){
returns_out_of_bag[,i] <- rowSums(w[i,,]*factors_out_of_bag[,2:7]) + rowSums(alpha*w[i,,c("SMB_US","MOM_US", "SMB_EU", "MOM_EU")])*factors_out_of_bag[,"RF"]
returns_in_bag[,i] <- rowSums(w[i,,]*mu) + rowSums(alpha*w[i,,c("SMB_US","MOM_US", "SMB_EU", "MOM_EU")])*returns[36:(nrow(returns)-1),"RF"]
}
Portfolio_names <- c("GMV", paste("Point", 1:n_internal, sep = " "), "Max_return")
returns_in_bag <- as_tibble(returns_in_bag)
returns_out_of_bag <- as_tibble(returns_out_of_bag)
colnames(returns_in_bag) <- Portfolio_names
colnames(returns_out_of_bag) <- Portfolio_names
return(
list(
"w" = w,
"returns_in_bag" = returns_in_bag,
"returns_out_of_bag" = returns_out_of_bag,
"Sigma" = Sigma,
"mu" = mu,
"RF" = RF
)
)
}
returns_choice <- readRDS("returns_choice.rds")
alpha <- 1
h <- optimize_with_shorting(alpha, returns_all)
apply(h$returns_out_of_bag, 2, cum_return) %>%
as_tibble() %>%
cbind(tibble(date = 1:208)) %>%
pivot_longer(cols = -date, names_to = "Portfolio", values_to = "cum_return") %>% ggplot(aes(date, cum_return, color = Portfolio)) +
geom_line()
var_short_in_bag <- array(NA, c(208, 22))
sd_short_out_bag <- rep(NA, 22)
for(j in 1:22){
for(i in 1:208){
var_short_in_bag[i,j] <- t(h$w[j,i,])%*%h$Sigma[i,,]%*%h$w[j,i,]
}
sd_short_out_bag[j] <- sd(unlist(h$returns_out_of_bag[,j]))
}
print("cumulative return")
apply(h$returns_out_of_bag, 2, cum_return)[208,]
cum_return(returns_choice$return)[208]
print("mean return")
((1+colMeans(h$returns_out_of_bag/100))^12-1)*100
((1+mean(returns_choice$return/100))^12-1)*100
print("volatilitet")
sd_short_out_bag
sd(returns_choice$return)
index_target_var <- rowSums(var_short_in_bag <= target_variance)
w_target_var <- array(NA, c(208, 6))
for(i in 1:208){
w_target_var[i,] <- h$w[index_target_var[i], i,]
}
mu*w_target_var + rowSums(alpha*w_target_var[,c(2, 3, 5, 6)])
mu*w_target_var + rowSums(alpha*w_target_var[,c(2, 3, 5, 6)])*h$RF
rowSums(mu*w_target_var + rowSums(alpha*w_target_var[,c(2, 3, 5, 6)])*h$RF)
mean(rowSums(mu*w_target_var + rowSums(alpha*w_target_var[,c(2, 3, 5, 6)])*h$RF))
factors_excess_return <- sweep(factors[,-1], 1, RF.EU$return, "-")
factors_excess_return <- cbind(factors$date, factors_excess_return)
n_assets <- ncol(factors_excess_return[,-1])
n <- nrow(factors_excess_return) - 35 - 1
w_min_var <- matrix(NA, nrow = n, ncol = n_assets)
w_max_return <- matrix(NA, nrow = n, ncol = n_assets)
n_internal <- 5
w_internal <- array(NA, dim = c(n_internal, n, n_assets))
target_returns <- array(NA, c(n, n_internal))
Sigma <- array(NA, c(n, n_assets, n_assets))
mu <- array(NA, c(n, n_assets))
for(i in 1:n){
excess_returns_period <- factors_excess_return[i:(i+35),-1]
mu[i,] <- colMeans(excess_returns_period)
Sigma[i,,] <- cov(excess_returns_period)
w_min_var[i,] <- optimize_portfolio(mu[i,], Sigma[i,,])
w_max_return[i,] <- optimize_return(mu[i,])
return_min_var <- sum(mu[i,]*w_min_var[i,])
return_max_return <- sum(mu[i,]*w_max_return[i,])
target_returns_tmp <- seq(return_min_var, return_max_return, (return_max_return - return_min_var)/(n_internal+1))
target_returns[i,] <- target_returns_tmp[-c(1, length(target_returns_tmp))]
for(j in 1:length(target_returns[i,])){
w_internal[j,i,] <- optimize_internal(mu[i,], Sigma[i,,], target_returns[i,j])
}
}
colnames(w_min_var) <- colnames(factors[,-1])
current_dimnames <- dimnames(w_internal)
current_dimnames[[3]] <- colnames(factors[,-1])
dimnames(w_internal) <- current_dimnames
colnames(w_max_return) <- colnames(factors[,-1])
factors_period <- factors[37:nrow(factors),]
return_min_var <- rowSums(w_min_var*factors_period[,-1])
return_max_return <- rowSums(w_max_return*factors_period[,-1])
return_internal <- array(NA, c(n, n_internal))
for(i in 1:n_internal){
return_internal[,i] <- rowSums(w_internal[i,,]*factors_period[,-1])
}
mean(return_max_return)
w_internal[1,,]
mu*w_internal[1,,]
rowSums(mu*w_internal[1,,])
mean(rowSums(mu*w_target_var + rowSums(alpha*w_target_var[,c(2, 3, 5, 6)])*h$RF))
mean(rowSums(mu*w_internal[1,,]))
returns_all[36:nrow(returns_all),]
rowSums(w_target_var*returns_all[36:nrow(returns_all),2:7]) + rowSums(alpha*w_target_var[,c(2, 3, 5, 6)]*returns_all[36:nrow(returns_all), 8])
w_target_var
returns_all[36:nrow(returns_all),2:7]
rowSums(w_target_var*returns_all[37:nrow(returns_all),2:7]) + rowSums(alpha*w_target_var[,c(2, 3, 5, 6)]*returns_all[37:nrow(returns_all), 8])
returns_target_var <- rowSums(w_target_var*returns_all[37:nrow(returns_all),2:7]) + rowSums(alpha*w_target_var[,c(2, 3, 5, 6)]*returns_all[37:nrow(returns_all), 8])
cum_return(returns_target_var)
sd(returns_target_var)
returns_choice <- readRDS("returns_choice.rds")
alpha <- 1/2
h <- optimize_with_shorting(alpha, returns_all)
apply(h$returns_out_of_bag, 2, cum_return) %>%
as_tibble() %>%
cbind(tibble(date = 1:208)) %>%
pivot_longer(cols = -date, names_to = "Portfolio", values_to = "cum_return") %>% ggplot(aes(date, cum_return, color = Portfolio)) +
geom_line()
var_short_in_bag <- array(NA, c(208, 22))
sd_short_out_bag <- rep(NA, 22)
for(j in 1:22){
for(i in 1:208){
var_short_in_bag[i,j] <- t(h$w[j,i,])%*%h$Sigma[i,,]%*%h$w[j,i,]
}
sd_short_out_bag[j] <- sd(unlist(h$returns_out_of_bag[,j]))
}
print("cumulative return")
apply(h$returns_out_of_bag, 2, cum_return)[208,]
cum_return(returns_choice$return)[208]
print("mean return")
((1+colMeans(h$returns_out_of_bag/100))^12-1)*100
((1+mean(returns_choice$return/100))^12-1)*100
print("volatilitet")
sd_short_out_bag
sd(returns_choice$return)
index_target_var <- rowSums(var_short_in_bag <= target_variance)
w_target_var <- array(NA, c(208, 6))
for(i in 1:208){
w_target_var[i,] <- h$w[index_target_var[i], i,]
}
mean(rowSums(mu*w_target_var + rowSums(alpha*w_target_var[,c(2, 3, 5, 6)])*h$RF))
mean(rowSums(mu*w_internal[1,,]))
returns_target_var <- rowSums(w_target_var*returns_all[37:nrow(returns_all),2:7]) + rowSums(alpha*w_target_var[,c(2, 3, 5, 6)]*returns_all[37:nrow(returns_all), 8])
cum_return(returns_target_var)
sd(returns_target_var)
cum_return(returns_target_var)
sd(returns_target_var)
returns_choice <- readRDS("returns_choice.rds")
alpha <- 3/4
h <- optimize_with_shorting(alpha, returns_all)
apply(h$returns_out_of_bag, 2, cum_return) %>%
as_tibble() %>%
cbind(tibble(date = 1:208)) %>%
pivot_longer(cols = -date, names_to = "Portfolio", values_to = "cum_return") %>% ggplot(aes(date, cum_return, color = Portfolio)) +
geom_line()
var_short_in_bag <- array(NA, c(208, 22))
sd_short_out_bag <- rep(NA, 22)
for(j in 1:22){
for(i in 1:208){
var_short_in_bag[i,j] <- t(h$w[j,i,])%*%h$Sigma[i,,]%*%h$w[j,i,]
}
sd_short_out_bag[j] <- sd(unlist(h$returns_out_of_bag[,j]))
}
print("cumulative return")
apply(h$returns_out_of_bag, 2, cum_return)[208,]
cum_return(returns_choice$return)[208]
print("mean return")
((1+colMeans(h$returns_out_of_bag/100))^12-1)*100
((1+mean(returns_choice$return/100))^12-1)*100
print("volatilitet")
sd_short_out_bag
sd(returns_choice$return)
index_target_var <- rowSums(var_short_in_bag <= target_variance)
w_target_var <- array(NA, c(208, 6))
for(i in 1:208){
w_target_var[i,] <- h$w[index_target_var[i], i,]
}
mean(rowSums(mu*w_target_var + rowSums(alpha*w_target_var[,c(2, 3, 5, 6)])*h$RF))
mean(rowSums(mu*w_internal[1,,]))
returns_target_var <- rowSums(w_target_var*returns_all[37:nrow(returns_all),2:7]) + rowSums(alpha*w_target_var[,c(2, 3, 5, 6)]*returns_all[37:nrow(returns_all), 8])
cum_return(returns_target_var)
sd(returns_target_var)
returns_choice <- readRDS("returns_choice.rds")
alpha <- 1
h <- optimize_with_shorting(alpha, returns_all)
apply(h$returns_out_of_bag, 2, cum_return) %>%
as_tibble() %>%
cbind(tibble(date = 1:208)) %>%
pivot_longer(cols = -date, names_to = "Portfolio", values_to = "cum_return") %>% ggplot(aes(date, cum_return, color = Portfolio)) +
geom_line()
var_short_in_bag <- array(NA, c(208, 22))
sd_short_out_bag <- rep(NA, 22)
for(j in 1:22){
for(i in 1:208){
var_short_in_bag[i,j] <- t(h$w[j,i,])%*%h$Sigma[i,,]%*%h$w[j,i,]
}
sd_short_out_bag[j] <- sd(unlist(h$returns_out_of_bag[,j]))
}
print("cumulative return")
apply(h$returns_out_of_bag, 2, cum_return)[208,]
cum_return(returns_choice$return)[208]
print("mean return")
((1+colMeans(h$returns_out_of_bag/100))^12-1)*100
((1+mean(returns_choice$return/100))^12-1)*100
print("volatilitet")
sd_short_out_bag
sd(returns_choice$return)
index_target_var <- rowSums(var_short_in_bag <= target_variance)
w_target_var <- array(NA, c(208, 6))
for(i in 1:208){
w_target_var[i,] <- h$w[index_target_var[i], i,]
}
mean(rowSums(mu*w_target_var + rowSums(alpha*w_target_var[,c(2, 3, 5, 6)])*h$RF))
mean(rowSums(mu*w_internal[1,,]))
returns_target_var <- rowSums(w_target_var*returns_all[37:nrow(returns_all),2:7]) + rowSums(alpha*w_target_var[,c(2, 3, 5, 6)]*returns_all[37:nrow(returns_all), 8])
cum_return(returns_target_var)
sd(returns_target_var)
returns_choice <- readRDS("returns_choice.rds")
alpha <- 1/4
h <- optimize_with_shorting(alpha, returns_all)
apply(h$returns_out_of_bag, 2, cum_return) %>%
as_tibble() %>%
cbind(tibble(date = 1:208)) %>%
pivot_longer(cols = -date, names_to = "Portfolio", values_to = "cum_return") %>% ggplot(aes(date, cum_return, color = Portfolio)) +
geom_line()
var_short_in_bag <- array(NA, c(208, 22))
sd_short_out_bag <- rep(NA, 22)
for(j in 1:22){
for(i in 1:208){
var_short_in_bag[i,j] <- t(h$w[j,i,])%*%h$Sigma[i,,]%*%h$w[j,i,]
}
sd_short_out_bag[j] <- sd(unlist(h$returns_out_of_bag[,j]))
}
print("cumulative return")
apply(h$returns_out_of_bag, 2, cum_return)[208,]
cum_return(returns_choice$return)[208]
print("mean return")
((1+colMeans(h$returns_out_of_bag/100))^12-1)*100
((1+mean(returns_choice$return/100))^12-1)*100
print("volatilitet")
sd_short_out_bag
sd(returns_choice$return)
index_target_var <- rowSums(var_short_in_bag <= target_variance)
w_target_var <- array(NA, c(208, 6))
for(i in 1:208){
w_target_var[i,] <- h$w[index_target_var[i], i,]
}
mean(rowSums(mu*w_target_var + rowSums(alpha*w_target_var[,c(2, 3, 5, 6)])*h$RF))
mean(rowSums(mu*w_internal[1,,]))
returns_target_var <- rowSums(w_target_var*returns_all[37:nrow(returns_all),2:7]) + rowSums(alpha*w_target_var[,c(2, 3, 5, 6)]*returns_all[37:nrow(returns_all), 8])
cum_return(returns_target_var)
sd(returns_target_var)
mean(rowSums(mu*w_internal[1,,]))
mean(rowSums(mu*w_target_var + rowSums(alpha*w_target_var[,c(2, 3, 5, 6)])*h$RF))
index_target_var
