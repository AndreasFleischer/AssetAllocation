factors_period
factors_preturn_calc <- factors[37:nrow(factors),]
rowSums(w_rp[,-1]*factors_preturn_calc[,-1])
return_rp <- rowSums(w_rp[,-1]*factors_preturn_calc[,-1])
factors_return_calc <- factors[37:nrow(factors),]
return_rp <- rowSums(w_rp[,-1]*factors_return_calc[,-1])
rp_df <- tibble(
Date = factors_return_calc$date,
Return <- return_rp
)
rp_df
rp_df <- tibble(
Date = factors_return_calc$date,
Return = return_rp
)
rp_df
library(ggplot2)
library(dplyr)
library(lubridate)
library(scales)
plot_data <- rp_df %>%
mutate(
Date = as_date(Date),
Performance = ifelse(Return >= 0, "Positive", "Negative")
)
ggplot(plot_data, aes(x = Date, y = Return)) +
geom_hline(yintercept = 0, linetype = "dashed", color = "gray50") +
geom_area(aes(fill = Performance), alpha = 0.8) +
geom_line(color = "black", linewidth = 0.4) +
scale_fill_manual(values = c("Positive" = "darkgreen", "Negative" = "firebrick")) +
scale_y_continuous(labels = scales::percent_format(accuracy = 1)) +
scale_x_date(date_breaks = "2 years", date_labels = "%Y") +
labs(
title = "Monthly Portfolio Returns",
subtitle = "Performance shown relative to zero",
x = "Date",
y = "Monthly Return",
fill = "Performance"
) +
theme_minimal() +
theme(
plot.title = element_text(face = "bold", size = 18),
plot.subtitle = element_text(size = 12, color = "gray30"),
legend.position = "top",
axis.title = element_text(face = "bold")
)
cumulative_return_rp <- (cumprod(1+return_rp/100)-1)*100
cumulative_return_df %>%
mutate(Time_Period = 1:n()) %>%
pivot_longer(
cols = -Time_Period,
names_to = "Portfolio",
values_to = "Cumulative_Return"
) %>%
ggplot(aes(x = Time_Period, y = Cumulative_Return, color = Portfolio, group = Portfolio)) +
geom_line(linewidth = 1.1, alpha = 0.8) +
geom_hline(yintercept = 1, linetype = "dashed", color = "gray40") +
scale_color_viridis_d(option = "plasma") +
scale_y_continuous(
name = "Cumulative Return (Growth of $1)",
trans = "log10",
breaks = c(0.1, 0.25, 0.5, 1, 2, 5, 10, 20, 50, 100),
labels = scales::dollar_format(prefix = "", suffix = "")
) +
labs(
title = "Cumulative Portfolio Performance",
subtitle = "Logarithmic scale highlights relative performance over time",
x = "Time Period",
color = "Portfolio Strategy"
) +
theme_minimal(base_size = 14) +
theme(
plot.title = element_text(face = "bold", size = 20, margin = margin(b = 5)),
plot.subtitle = element_text(size = 13, color = "gray30", margin = margin(b = 15)),
legend.position = "right",
legend.title = element_text(face = "bold"),
axis.title = element_text(face = "bold"),
panel.grid.minor = element_blank()
)
cumulative_return_rp <- (cumprod(1+return_rp/100)-1)*100
rp_df <- tibble(
Date = factors_return_calc$date,
Return = cumulative_return_rp
)
library(ggplot2)
library(dplyr)
library(tidyr)
library(viridis)
cumulative_return_df %>%
mutate(Date = ym(Date)) %>%
pivot_longer(
cols = -Date,
names_to = "Portfolio",
values_to = "Cumulative_Return"
) %>%
ggplot(aes(x = Date, y = Cumulative_Return, color = Portfolio, group = Portfolio)) +
geom_line(linewidth = 1.1, alpha = 0.8) +
geom_hline(yintercept = 1, linetype = "dashed", color = "gray40") +
scale_color_viridis_d(option = "plasma") +
scale_y_continuous(
name = "Cumulative Return (Growth of $1)",
trans = "log10",
breaks = c(0.1, 0.25, 0.5, 1, 2, 5, 10, 20, 50, 100),
labels = scales::dollar_format(prefix = "", suffix = "")
) +
labs(
title = "Cumulative Portfolio Performance",
subtitle = "Logarithmic scale highlights relative performance over time",
x = "Time Period",
color = "Portfolio Strategy"
) +
theme_minimal(base_size = 14) +
theme(
plot.title = element_text(face = "bold", size = 20, margin = margin(b = 5)),
plot.subtitle = element_text(size = 13, color = "gray30", margin = margin(b = 15)),
legend.position = "right",
legend.title = element_text(face = "bold"),
axis.title = element_text(face = "bold"),
panel.grid.minor = element_blank()
)
cumulative_return_df %>%
mutate(Date = ym(Date)) %>%
pivot_longer(
cols = -Date,
names_to = "Portfolio",
values_to = "Cumulative_Return"
) %>%
ggplot(aes(x = Date, y = Cumulative_Return, color = Portfolio, group = Portfolio)) +
geom_line(linewidth = 1.1, alpha = 0.8) +
geom_hline(yintercept = 1, linetype = "dashed", color = "gray40") +
scale_color_viridis_d(option = "plasma") +
scale_y_continuous(
name = "Cumulative Return (Growth of $1)",
trans = "log10",
breaks = c(0.1, 0.25, 0.5, 1, 2, 5, 10, 20, 50, 100),
labels = scales::dollar_format(prefix = "", suffix = "")
) +
labs(
title = "Cumulative Portfolio Performance",
subtitle = "Logarithmic scale highlights relative performance over time",
x = "Time Period",
color = "Portfolio Strategy"
) +
theme_minimal(base_size = 14) +
theme(
plot.title = element_text(face = "bold", size = 20, margin = margin(b = 5)),
plot.subtitle = element_text(size = 13, color = "gray30", margin = margin(b = 15)),
legend.position = "right",
legend.title = element_text(face = "bold"),
axis.title = element_text(face = "bold"),
panel.grid.minor = element_blank()
)
cumulative_return_df %>%
mutate(Date = ym(Date)) %>%
pivot_longer(
cols = -Date,
names_to = "Portfolio",
values_to = "Cumulative_Return"
)
cumulative_return_df %>%
mutate(Date = ym(Date))
rp_df %>%
mutate(Date = ym(Date)) %>%
pivot_longer(
cols = -Date,
names_to = "Portfolio",
values_to = "Cumulative_Return"
) %>%
ggplot(aes(x = Date, y = Cumulative_Return, color = Portfolio, group = Portfolio)) +
geom_line(linewidth = 1.1, alpha = 0.8) +
geom_hline(yintercept = 1, linetype = "dashed", color = "gray40") +
scale_color_viridis_d(option = "plasma") +
scale_y_continuous(
name = "Cumulative Return (Growth of $1)",
trans = "log10",
breaks = c(0.1, 0.25, 0.5, 1, 2, 5, 10, 20, 50, 100),
labels = scales::dollar_format(prefix = "", suffix = "")
) +
labs(
title = "Cumulative Portfolio Performance",
subtitle = "Logarithmic scale highlights relative performance over time",
x = "Time Period",
color = "Portfolio Strategy"
) +
theme_minimal(base_size = 14) +
theme(
plot.title = element_text(face = "bold", size = 20, margin = margin(b = 5)),
plot.subtitle = element_text(size = 13, color = "gray30", margin = margin(b = 15)),
legend.position = "right",
legend.title = element_text(face = "bold"),
axis.title = element_text(face = "bold"),
panel.grid.minor = element_blank()
)
rp_df <- tibble(
Date = factors_return_calc$date,
Cumulative_Return = cumulative_return_rp
)
ggplot(rp_df, aes(x = Date, y = Cumulative_Return)) +
geom_line(linewidth = 1) +
labs(
title = "Cumulative Returns of Risk parity portfolio",
x = "Date",
y = "Cumulative Return"
) +
theme_minimal() +
theme(
plot.title = element_text(face = "bold", size = 16),
plot.subtitle = element_text(size = 12),
legend.position = "right",
legend.title = element_text(face = "bold")
)
ggplot(rp_df, aes(x = ym(Date), y = Cumulative_Return)) +
geom_line(linewidth = 1) +
labs(
title = "Cumulative Returns of Risk parity portfolio",
x = "Date",
y = "Cumulative Return"
) +
theme_minimal() +
theme(
plot.title = element_text(face = "bold", size = 16),
plot.subtitle = element_text(size = 12),
legend.position = "right",
legend.title = element_text(face = "bold")
)
ggplot(plot_data, aes(x = Date, y = Cumulative_Return, color = Portfolio)) +
geom_line(linewidth = 1) +
scale_color_viridis_d(option = "cividis") +
labs(
title = "Cumulative Returns of Efficient Frontier Portfolios",
subtitle = "Performance of portfolios from Minimum Variance to Maximum Return",
x = "Date",
y = "Cumulative Return",
color = "Portfolio"
) +
theme_minimal() +
theme(
plot.title = element_text(face = "bold", size = 16),
plot.subtitle = element_text(size = 12),
legend.position = "right",
legend.title = element_text(face = "bold")
)
plot_data <- cumulative_return_df %>%
mutate(Date = ym(factors_period$date)) %>%
pivot_longer(
cols = -Date,
names_to = "Portfolio",
values_to = "Cumulative_Return"
) %>%
mutate(Portfolio = factor(Portfolio, levels = new_names))
cumulative_return_internal <- array(NA, c(n, n_internal))
for(i in 1:n_internal){
cumulative_return_internal[,i] <- (cumprod(1+return_internal[,i]/100)-1)*100
}
cumulative_return_df <- data.frame(
cumulative_return_min_var,
cumulative_return_internal[, seq(2, 10, 2)],
cumulative_return_max_return
)
new_names <- c("Minimum variance", paste("point", 1:5), "max return")
colnames(cumulative_return_df) <- new_names
plot_data <- cumulative_return_df %>%
mutate(Date = ym(factors_period$date)) %>%
pivot_longer(
cols = -Date,
names_to = "Portfolio",
values_to = "Cumulative_Return"
) %>%
mutate(Portfolio = factor(Portfolio, levels = new_names))
factors_period <- factors[37:nrow(factors),]
cumulative_return_internal <- array(NA, c(n, n_internal))
for(i in 1:n_internal){
cumulative_return_internal[,i] <- (cumprod(1+return_internal[,i]/100)-1)*100
}
cumulative_return_df <- data.frame(
cumulative_return_min_var,
cumulative_return_internal[, seq(2, 10, 2)],
cumulative_return_max_return
)
new_names <- c("Minimum variance", paste("point", 1:5), "max return")
colnames(cumulative_return_df) <- new_names
plot_data <- cumulative_return_df %>%
mutate(Date = ym(factors_period$date)) %>%
pivot_longer(
cols = -Date,
names_to = "Portfolio",
values_to = "Cumulative_Return"
) %>%
mutate(Portfolio = factor(Portfolio, levels = new_names))
ggplot(plot_data, aes(x = Date, y = Cumulative_Return, color = Portfolio)) +
geom_line(linewidth = 1) +
scale_color_viridis_d(option = "cividis") +
labs(
title = "Cumulative Returns of Efficient Frontier Portfolios",
subtitle = "Performance of portfolios from Minimum Variance to Maximum Return",
x = "Date",
y = "Cumulative Return",
color = "Portfolio"
) +
theme_minimal() +
theme(
plot.title = element_text(face = "bold", size = 16),
plot.subtitle = element_text(size = 12),
legend.position = "right",
legend.title = element_text(face = "bold")
)
c(min(cumulative_return_internal[k,]), max(cumulative_return_internal[k,]))
c(min(cumulative_return_internal[k,]/n), max(cumulative_return_internal[k,]/n))
c(min(apply(return_internal, 2, sd)), max(apply(return_internal, 2, sd)))
ggplot(plot_data, aes(x = Date, y = Cumulative_Return, color = Portfolio)) +
geom_line(linewidth = 0.5) +
scale_color_viridis_d(option = "cividis") +
labs(
title = "Cumulative Returns of Efficient Frontier Portfolios",
subtitle = "Performance of portfolios from Minimum Variance to Maximum Return",
x = "Date",
y = "Cumulative Return",
color = "Portfolio"
) +
theme_minimal() +
theme(
plot.title = element_text(face = "bold", size = 16),
plot.subtitle = element_text(size = 12),
legend.position = "right",
legend.title = element_text(face = "bold")
)
cumulative_return_internal
cumulative_return_mv_chosen <- cumulative_return_internal[,6]
rp_df <- tibble(
Date = factors_return_calc$date,
Cumulative_Return = cumulative_return_rp,
Cumulative_return_mv_chosen = cumulative_return_mv_chosen
)
rp_df <- tibble(
Date = ym(factors_return_calc$date),
Cumulative_Return = cumulative_return_rp,
Cumulative_return_mv_chosen = cumulative_return_mv_chosen
)
rp_df %>%
pivot_longer(cols = -Date, names_to = "Portfolio", values_to = "Cumulative return") %>%
ggplot(aes(x = ym(Date), y = Cumulative_Return, color = Portfolio)) +
geom_line(linewidth = 1) +
labs(
title = "Cumulative Returns of Risk parity portfolio",
x = "Date",
y = "Cumulative Return"
) +
theme_minimal() +
theme(
plot.title = element_text(face = "bold", size = 16),
plot.subtitle = element_text(size = 12),
legend.position = "right",
legend.title = element_text(face = "bold")
)
rp_df %>%
pivot_longer(cols = -Date, names_to = "Portfolio", values_to = "Cumulative return") %>%
ggplot(aes(x = Date, y = Cumulative_Return, color = Portfolio)) +
geom_line(linewidth = 1) +
labs(
title = "Cumulative Returns of Risk parity portfolio",
x = "Date",
y = "Cumulative Return"
) +
theme_minimal() +
theme(
plot.title = element_text(face = "bold", size = 16),
plot.subtitle = element_text(size = 12),
legend.position = "right",
legend.title = element_text(face = "bold")
)
rp_df <- tibble(
Date = ym(factors_return_calc$date),
Cumulative_Return = cumulative_return_rp,
Cumulative_return_mv_chosen = cumulative_return_mv_chosen
)
rp_df %>%
pivot_longer(cols = -Date, names_to = "Portfolio", values_to = "Cumulative return") %>%
ggplot(aes(x = Date, y = Cumulative_Return, color = Portfolio)) +
geom_line(linewidth = 1) +
labs(
title = "Cumulative Returns of Risk parity portfolio",
x = "Date",
y = "Cumulative Return"
) +
theme_minimal() +
theme(
plot.title = element_text(face = "bold", size = 16),
plot.subtitle = element_text(size = 12),
legend.position = "right",
legend.title = element_text(face = "bold")
)
rp_df %>%
pivot_longer(cols = -Date, names_to = "Portfolio", values_to = "Cumulative return") %>%
ggplot(aes(x = Date, y = Cumulative Return, color = Portfolio)) +
rp_df %>%
pivot_longer(cols = -Date, names_to = "Portfolio", values_to = "Cumulative_return") %>%
ggplot(aes(x = Date, y = Cumulative_Return, color = Portfolio)) +
geom_line(linewidth = 1) +
labs(
title = "Cumulative Returns of Risk parity portfolio",
x = "Date",
y = "Cumulative Return"
) +
theme_minimal() +
theme(
plot.title = element_text(face = "bold", size = 16),
plot.subtitle = element_text(size = 12),
legend.position = "right",
legend.title = element_text(face = "bold")
)
rp_df <- tibble(
Date = ym(factors_return_calc$date),
Cumulative_Return = cumulative_return_rp,
Cumulative_return_mv_chosen = cumulative_return_mv_chosen
)
rp_df %>%
pivot_longer(cols = -Date, names_to = "Portfolio", values_to = "Cumulative_Return") %>%
ggplot(aes(x = Date, y = Cumulative_Return, color = Portfolio)) +
geom_line(linewidth = 1) +
labs(
title = "Cumulative Returns of Risk parity portfolio",
x = "Date",
y = "Cumulative Return"
) +
theme_minimal() +
theme(
plot.title = element_text(face = "bold", size = 16),
plot.subtitle = element_text(size = 12),
legend.position = "right",
legend.title = element_text(face = "bold")
)
rp_df <- tibble(
Date = ym(factors_return_calc$date),
Risk_parity = cumulative_return_rp,
chosen_mean_variance = cumulative_return_mv_chosen
)
rp_df %>%
pivot_longer(cols = -Date, names_to = "Portfolio", values_to = "Cumulative_Return") %>%
ggplot(aes(x = Date, y = Cumulative_Return, color = Portfolio)) +
geom_line(linewidth = 1) +
labs(
title = "Cumulative Returns of Risk parity portfolio",
x = "Date",
y = "Cumulative Return"
) +
theme_minimal() +
theme(
plot.title = element_text(face = "bold", size = 16),
plot.subtitle = element_text(size = 12),
legend.position = "right",
legend.title = element_text(face = "bold")
)
rp_df <- tibble(
Date = ym(factors_return_calc$date),
"Risk parity" = cumulative_return_rp,
"chosen mean variance" = cumulative_return_mv_chosen
)
rp_df %>%
pivot_longer(cols = -Date, names_to = "Portfolio", values_to = "Cumulative_Return") %>%
ggplot(aes(x = Date, y = Cumulative_Return, color = Portfolio)) +
geom_line(linewidth = 1) +
labs(
title = "Cumulative Returns of Risk parity portfolio",
x = "Date",
y = "Cumulative Return"
) +
theme_minimal() +
theme(
plot.title = element_text(face = "bold", size = 16),
plot.subtitle = element_text(size = 12),
legend.position = "right",
legend.title = element_text(face = "bold")
)
rp_df <- tibble(
Date = ym(factors_return_calc$date),
"Risk parity" = cumulative_return_rp,
"Chosen mean variance" = cumulative_return_mv_chosen
)
rp_df %>%
pivot_longer(cols = -Date, names_to = "Portfolio", values_to = "Cumulative_Return") %>%
ggplot(aes(x = Date, y = Cumulative_Return, color = Portfolio)) +
geom_line(linewidth = 1) +
labs(
title = "Cumulative Returns of Risk parity portfolio",
x = "Date",
y = "Cumulative Return"
) +
theme_minimal() +
theme(
plot.title = element_text(face = "bold", size = 16),
plot.subtitle = element_text(size = 12),
legend.position = "right",
legend.title = element_text(face = "bold")
)
cumulative_return_rp
cumulative_return_mv_chosen
cumulative_return_rp[n]-cumulative_return_mv_chosen[n]
round(cumulative_return_rp[n], 2)-round(cumulative_return_mv_chosen[n], 2)
round(cumulative_return_rp[n], 0)-round(cumulative_return_mv_chosen[n], 0)
cumulative_return_mv_chosen
cumulative_return_rp[n]/n
round(cumulative_return_rp[n]/n, 2) - round(cumulative_return_mv_chosen[n]/n)
round(cumulative_return_mv_chosen[n]/n)
round(cumulative_return_mv_chosen[n]/n)
cumulative_return_mv_chosen[n]/n
round(cumulative_return_rp[n]/n, 2) - round(cumulative_return_mv_chosen[n]/n, 2)
round(cumulative_return_mv_chosen[n]/n, 2)
round(cumulative_return_rp[n]/n, 2) - round(cumulative_return_mv_chosen[n]/n, 2)
round(return_rp, 2)
round(sd(return_rp), 2)
round(sd(return_rp), 2)-round(sd(return_internal[,6]), 2)
round(sd(return_internal[,6]), 2)
