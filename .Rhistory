cols = -Period,
names_to = "Name",
values_to = "Value"
) %>%
mutate(
Target = str_split(Name, "x", simplify = TRUE)[, 2],
Trigger = str_split(Name, "x", simplify = TRUE)[, 3]
) %>%
filter(Target %in% target_vals) %>%
group_by(Target, Period) %>%
summarise("Value" = mean(Value)) %>%
mutate("initial_guarantee_over_100" = Value >= 100) %>%
group_by(Target) %>%
summarise("n_initial_over_100" = sum(initial_guarantee_over_100),
n_initial_over_100/89*100)
initial_guarantee %>%
mutate(Period = row_number()) %>%
pivot_longer(
cols = -Period,
names_to = "Name",
values_to = "Value"
) %>%
mutate(
Target = str_split(Name, "x", simplify = TRUE)[, 2],
Trigger = str_split(Name, "x", simplify = TRUE)[, 3]
) %>%
filter(Target %in% target_vals) %>%
group_by(Target, Period) %>%
summarise("Value" = mean(Value)) %>%
mutate("initial_guarantee_over_100" = Value >= 100) %>%
group_by(Target) %>%
summarise("n_initial_over_100" = sum(initial_guarantee_over_100),
"%_initial_over_100" = n_initial_over_100/89*100)
initial_guarantee %>%
mutate(Period = row_number()) %>%
pivot_longer(
cols = -Period,
names_to = "Name",
values_to = "Value"
) %>%
mutate(
Target = str_split(Name, "x", simplify = TRUE)[, 2],
Trigger = str_split(Name, "x", simplify = TRUE)[, 3]
) %>%
# filter(Target %in% target_vals) %>%
group_by(Target, Period) %>%
summarise("Value" = mean(Value)) %>%
mutate("initial_guarantee_over_100" = Value >= 100) %>%
group_by(Target) %>%
summarise("n_initial_over_100" = sum(initial_guarantee_over_100),
"%_initial_over_100" = n_initial_over_100/89*100)
initial_guarantee %>%
mutate(Period = row_number()) %>%
pivot_longer(
cols = -Period,
names_to = "Name",
values_to = "Value"
) %>%
mutate(
Target = str_split(Name, "x", simplify = TRUE)[, 2],
Trigger = str_split(Name, "x", simplify = TRUE)[, 3]
) %>%
# filter(Target %in% target_vals) %>%
group_by(Target, Period) %>%
summarise("Value" = mean(Value)) %>%
mutate("initial_guarantee_over_100" = Value >= 100)
initial_guarantee %>%
mutate(Period = row_number()) %>%
pivot_longer(
cols = -Period,
names_to = "Name",
values_to = "Value"
) %>%
mutate(
Target = str_split(Name, "x", simplify = TRUE)[, 2],
Trigger = str_split(Name, "x", simplify = TRUE)[, 3]
) %>%
# filter(Target %in% target_vals) %>%
group_by(Target, Period) %>%
summarise("Value" = mean(Value)) %>%
mutate("initial_guarantee_over_100" = Value >= 100) %>%
group_by(Target) %>%
summarise("n_initial_over_100" = sum(initial_guarantee_over_100),
"%_initial_over_100" = n_initial_over_100/89*100,
"min_initial_guarantee" = min(Value))
initial_guarantee %>%
mutate(Period = row_number()) %>%
pivot_longer(
cols = -Period,
names_to = "Name",
values_to = "Value"
) %>%
mutate(
Target = str_split(Name, "x", simplify = TRUE)[, 2],
Trigger = str_split(Name, "x", simplify = TRUE)[, 3]
) %>%
# filter(Target %in% target_vals) %>%
group_by(Target, Period) %>%
summarise("Value" = mean(Value)) %>%
mutate("initial_guarantee_over_100" = Value >= 100) %>%
group_by(Target) %>%
summarise("n_initial_over_100" = sum(initial_guarantee_over_100),
"%_initial_over_100" = n_initial_over_100/89*100,
"min_initial_guarantee" = min(Value)) %>%
View()
#guarantees_m_2.5 <- readRDS("C:/Users/nikol/OneDrive - University of Copenhagen/Aktuar/5. år/Asset allocation/Exam project/CPPI_strats_m_2.5")
guarantees_m_2.5 <- map(guarantees_m_2.5, "Guarantee_month")
dim(guarantees_m_2.5$`2.5x1.25x1.3`)
plot(guarantees_m_2.5$`2.5x1.25x1.3`[-121,1])
guarantees_m_2.5 <- readRDS("C:/Users/nikol/OneDrive - University of Copenhagen/Aktuar/5. år/Asset allocation/Exam project/CPPI_strats_m_2.5")
guarantees_m_2.5 <- map(guarantees_m_2.5, "Guarantee_month")
dim(guarantees_m_2.5$`2.5x1.25x1.3`)
plot(guarantees_m_2.5$`2.5x1.25x1.3`[-121,1])
bad_period_guarantee <- map_dfc(guarantees_m_2.5, ~ .[, 1])
target_vals <- c("1.2", "1.25", "1.35", "1.5")
trigger_vals <- c("1.3", "1.4", "1.5", "1.6")
df_bad_period <- bad_period_guarantee[-121,] %>%
mutate(Period = row_number()) %>%
pivot_longer(
cols = -Period,
names_to = "Name",
values_to = "Value"
) %>%
mutate(
Target = str_split(Name, "x", simplify = TRUE)[, 2],
Trigger = str_split(Name, "x", simplify = TRUE)[, 3]
) %>%
filter(Target %in% target_vals & Trigger %in% trigger_vals)
ggplot(df_bad_period, aes(x = Period, y = Value, color = Name, group = Name)) +
geom_line(size = 1.2) +
geom_point(size = 2.5) +
labs(
title = "Selected Guarantee Columns (m = 2.5)",
x = "Period (Row Number)",
y = "Guarantee Value (First Column)",
color = "Combination (mxTargetxTrigger)"
) +
theme_minimal() +
theme(legend.position = "bottom")
good_period_guarantee <- map_dfc(guarantees_m_2.5, ~ .[, 89])
target_vals <- c("1.2", "1.25", "1.35", "2")
trigger_vals <- c("1.3", "1.4", "1.5", "2.1")
df_good_period <- good_period_guarantee[-121,] %>%
mutate(Period = row_number()) %>%
pivot_longer(
cols = -Period,
names_to = "Name",
values_to = "Value"
) %>%
mutate(
Target = str_split(Name, "x", simplify = TRUE)[, 2],
Trigger = str_split(Name, "x", simplify = TRUE)[, 3]
) %>%
filter(Target %in% target_vals & Trigger %in% trigger_vals)
ggplot(df_good_period, aes(x = Period, y = Value, color = Name, group = Name)) +
geom_line(size = 1.2) +
geom_point(size = 2.5) +
labs(
title = "Selected Guarantee Columns (m = 2.5)",
x = "Period (Row Number)",
y = "Guarantee Value (First Column)",
color = "Combination (mxTargetxTrigger)"
) +
theme_minimal() +
theme(legend.position = "bottom")
returns_choice <- readRDS("returns_choice.rds")
returns_choice <- readRDS("returns_choice.rds")
# m <- seq(1, 20, 0.5)
m <- 2.5
L_target <- 1.27
L_trigger <- seq(110, 1.57, 1)/100
search_grid = expand.grid(m = m, "L_target" = L_target, "L_trigger" = L_trigger) %>%
filter(L_target < L_trigger & L_trigger - L_target <= 0.3)
search_grid <- sort_by(search_grid, ~list(m, L_target, L_trigger))
new_names <- apply(search_grid, 1, paste, collapse = "x")
guarantees_trigger_target <- vector(mode = "list", length = nrow(search_grid))
for(i in 1:nrow(search_grid)){
guarantees_trigger_target[[i]] <- CPPI(search_grid[i,1], search_grid[i,2], search_grid[i,3], returns_choice)
}
names(guarantees_trigger_target) <- new_names
wealth <- map(guarantees_trigger_target, "Wealth_month")
last_row_list <- lapply(wealth, function(x) x[nrow(x), ])
wealth_df <- tibble(date = All_years$TIME_PERIOD[36:124]) %>%
cbind(last_row_list)
df <- tibble(strings = new_names)
# 3. Use 'extract' to split the string into new columns
# "(\\d+)" is a regular expression for "one or more digits"
# 'convert = TRUE' automatically makes M, K, and L numeric
df_with_diff <- df %>%
extract(strings,
into = c("m", "Target", "Trigger"),
# This regex now matches decimals
"([\\d\\.]+)x([\\d\\.]+)x([\\d\\.]+)",
convert = TRUE) %>%
mutate(Difference = Trigger - Target)
colnames(wealth_df) <- c("date", round(df_with_diff$Difference, 3))
plot(colMeans(wealth_df[,-1]))
Trigger_hit <- map(guarantees_trigger_target, "Trigger_hit")
Trigger_hit_df <- as.tibble(lapply(Trigger_hit, colSums))
plot_data <- Trigger_hit_df %>%
select(starts_with("7x1.31x")) %>%
summarise(across(everything(), ~ mean(., na.rm = TRUE))) %>%
pivot_longer(
cols = everything(),
names_to = "ColumnName",
values_to = "MeanValue"
)
Trigger_hit <- map(guarantees_trigger_target, "Trigger_hit")
Trigger_hit_df <- as.tibble(lapply(Trigger_hit, colSums))
Trigger_hit_df
Trigger_hit
Trigger_hit <- map(guarantees_trigger_target, "Trigger_hit")
Trigger_hit_df <- as.tibble(lapply(Trigger_hit, colSums))
plot_data <- Trigger_hit_df %>%
select(starts_with("7x1.27x")) %>%
summarise(across(everything(), ~ mean(., na.rm = TRUE))) %>%
pivot_longer(
cols = everything(),
names_to = "ColumnName",
values_to = "MeanValue"
)
Trigger_hit_df
returns_choice <- readRDS("returns_choice.rds")
# m <- seq(1, 20, 0.5)
m <- 2.5
L_target <- 1.27
L_trigger <- seq(110, 1.57, 1)/100
L_trigger <- seq(128, 157, 1)/100
search_grid = expand.grid(m = m, "L_target" = L_target, "L_trigger" = L_trigger) %>%
filter(L_target < L_trigger & L_trigger - L_target <= 0.3)
search_grid <- sort_by(search_grid, ~list(m, L_target, L_trigger))
new_names <- apply(search_grid, 1, paste, collapse = "x")
new_names
guarantees_trigger_target <- vector(mode = "list", length = nrow(search_grid))
for(i in 1:nrow(search_grid)){
guarantees_trigger_target[[i]] <- CPPI(search_grid[i,1], search_grid[i,2], search_grid[i,3], returns_choice)
}
names(guarantees_trigger_target) <- new_names
wealth <- map(guarantees_trigger_target, "Wealth_month")
last_row_list <- lapply(wealth, function(x) x[nrow(x), ])
wealth_df <- tibble(date = All_years$TIME_PERIOD[36:124]) %>%
cbind(last_row_list)
df <- tibble(strings = new_names)
Trigger_hit <- map(guarantees_trigger_target, "Trigger_hit")
Trigger_hit_df <- as.tibble(lapply(Trigger_hit, colSums))
Trigger_hit_df
plot_data <- Trigger_hit_df %>%
select(starts_with("7x1.27x")) %>%
summarise(across(everything(), ~ mean(., na.rm = TRUE))) %>%
pivot_longer(
cols = everything(),
names_to = "ColumnName",
values_to = "MeanValue"
)
plot_data <- Trigger_hit_df %>%
#select(starts_with("7x1.27x")) %>%
summarise(across(everything(), ~ mean(., na.rm = TRUE))) %>%
pivot_longer(
cols = everything(),
names_to = "ColumnName",
values_to = "MeanValue"
)
ggplot(plot_data, aes(x = ColumnName, y = MeanValue)) +
geom_col(fill = "steelblue") +
labs(
title = "Mean Value for Columns Starting with '7x1.25x'",
x = "Column Name",
y = "Calculated Mean"
) +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
Trigger_hit_df
Trigger_hit_df
summary_df <- Trigger_hit_df %>%
summarise(across(everything(), mean, na.rm = TRUE)) %>%
pivot_longer(
cols = everything(),
names_to = "Name",
values_to = "column_mean"
) %>%
mutate(
Trigger = str_split(Name, "x", simplify = TRUE)[, 3],
Trigger = as.numeric(Trigger)
)
summary_df
ggplot(summary_df, aes(x = Trigger, y = column_mean)) +
geom_line(size = 1.2, color = "#0072B2") +
geom_point(size = 2.5, color = "#0072B2") +
labs(
title = "Mean Value of Columns by Trigger Level",
subtitle = "For m = 2.5 and Target = 1.27",
x = "Trigger Level",
y = "Mean Value of Column"
) +
theme_minimal()
ggplot(summary_df, aes(x = Trigger, y = column_mean)) +
geom_line(size = 1.2, color = "#0072B2") +
geom_point(size = 2.5, color = "#0072B2") +
scale_x_continuous(breaks = seq(min(summary_df$Trigger),
max(summary_df$Trigger),
by = 0.1)) +
labs(
title = "Mean Value of Columns by Trigger Level",
subtitle = "For m = 2.5 and Target = 1.27",
x = "Trigger Level",
y = "Mean Value of Column"
) +
theme_minimal()
ggplot(summary_df, aes(x = Trigger, y = column_mean)) +
geom_line(size = 1.2, color = "#0072B2") +
geom_point(size = 2.5, color = "#0072B2") +
scale_x_continuous(breaks = seq(min(summary_df$Trigger),
max(summary_df$Trigger),
by = 0.01)) +
labs(
title = "Mean Value of Columns by Trigger Level",
subtitle = "For m = 2.5 and Target = 1.27",
x = "Trigger Level",
y = "Mean Value of Column"
) +
theme_minimal()
ggplot(summary_df, aes(x = Trigger, y = column_mean)) +
geom_line(size = 1.2, color = "#0072B2") +
geom_point(size = 2.5, color = "#0072B2") +
scale_x_continuous(breaks = seq(min(summary_df$Trigger),
max(summary_df$Trigger),
by = 0.05)) +
labs(
title = "Mean Value of Columns by Trigger Level",
subtitle = "For m = 2.5 and Target = 1.27",
x = "Trigger Level",
y = "Mean Value of Column"
) +
theme_minimal()
summary_df <- Trigger_hit_df %>%
summarise(across(everything(), median, na.rm = TRUE)) %>%
pivot_longer(
cols = everything(),
names_to = "Name",
values_to = "column_mean"
) %>%
mutate(
Trigger = str_split(Name, "x", simplify = TRUE)[, 3],
Trigger = as.numeric(Trigger)
)
ggplot(summary_df, aes(x = Trigger, y = column_mean)) +
geom_line(size = 1.2, color = "#0072B2") +
geom_point(size = 2.5, color = "#0072B2") +
scale_x_continuous(breaks = seq(min(summary_df$Trigger),
max(summary_df$Trigger),
by = 0.05)) +
labs(
title = "Mean Value of Columns by Trigger Level",
subtitle = "For m = 2.5 and Target = 1.27",
x = "Trigger Level",
y = "Mean Value of Column"
) +
theme_minimal()
summary_df <- Trigger_hit_df %>%
summarise(across(everything(), mean, na.rm = TRUE)) %>%
pivot_longer(
cols = everything(),
names_to = "Name",
values_to = "column_mean"
) %>%
mutate(
Trigger = str_split(Name, "x", simplify = TRUE)[, 3],
Trigger = as.numeric(Trigger)
)
ggplot(summary_df, aes(x = Trigger, y = column_mean)) +
geom_line(size = 1.2, color = "#0072B2") +
geom_point(size = 2.5, color = "#0072B2") +
scale_x_continuous(breaks = seq(min(summary_df$Trigger),
max(summary_df$Trigger),
by = 0.05)) +
labs(
title = "Mean Value of Columns by Trigger Level",
subtitle = "For m = 2.5 and Target = 1.27",
x = "Trigger Level",
y = "Mean Value of Column"
) +
theme_minimal()
summary_df <- Trigger_hit_df %>%
summarise(across(everything(), median, na.rm = TRUE)) %>%
pivot_longer(
cols = everything(),
names_to = "Name",
values_to = "column_mean"
) %>%
mutate(
Trigger = str_split(Name, "x", simplify = TRUE)[, 3],
Trigger = as.numeric(Trigger)
)
ggplot(summary_df, aes(x = Trigger, y = column_mean)) +
geom_line(size = 1.2, color = "#0072B2") +
geom_point(size = 2.5, color = "#0072B2") +
scale_x_continuous(breaks = seq(min(summary_df$Trigger),
max(summary_df$Trigger),
by = 0.05)) +
labs(
title = "Mean Value of Columns by Trigger Level",
subtitle = "For m = 2.5 and Target = 1.27",
x = "Trigger Level",
y = "Mean Value of Column"
) +
theme_minimal()
summary_df <- Trigger_hit_df %>%
summarise(across(everything(), mean, na.rm = TRUE)) %>%
pivot_longer(
cols = everything(),
names_to = "Name",
values_to = "column_mean"
) %>%
mutate(
Trigger = str_split(Name, "x", simplify = TRUE)[, 3],
Trigger = as.numeric(Trigger)
)
ggplot(summary_df, aes(x = Trigger, y = column_mean)) +
geom_line(size = 1.2, color = "#0072B2") +
geom_point(size = 2.5, color = "#0072B2") +
scale_x_continuous(breaks = seq(min(summary_df$Trigger),
max(summary_df$Trigger),
by = 0.05)) +
labs(
title = "Mean Value of Columns by Trigger Level",
subtitle = "For m = 2.5 and Target = 1.27",
x = "Trigger Level",
y = "Mean Value of Column"
) +
theme_minimal()
summary_df <- Trigger_hit_df %>%
summarise(across(everything(), quantile, na.rm = TRUE)) %>%
pivot_longer(
cols = everything(),
names_to = "Name",
values_to = "column_mean"
) %>%
mutate(
Trigger = str_split(Name, "x", simplify = TRUE)[, 3],
Trigger = as.numeric(Trigger)
)
ggplot(summary_df, aes(x = Trigger, y = column_mean)) +
geom_line(size = 1.2, color = "#0072B2") +
geom_point(size = 2.5, color = "#0072B2") +
scale_x_continuous(breaks = seq(min(summary_df$Trigger),
max(summary_df$Trigger),
by = 0.05)) +
labs(
title = "Mean Value of Columns by Trigger Level",
subtitle = "For m = 2.5 and Target = 1.27",
x = "Trigger Level",
y = "Mean Value of Column"
) +
theme_minimal()
summary_df <- Trigger_hit_df %>%
summarise(across(everything(), median, na.rm = TRUE)) %>%
pivot_longer(
cols = everything(),
names_to = "Name",
values_to = "column_mean"
) %>%
mutate(
Trigger = str_split(Name, "x", simplify = TRUE)[, 3],
Trigger = as.numeric(Trigger)
)
ggplot(summary_df, aes(x = Trigger, y = column_mean)) +
geom_line(size = 1.2, color = "#0072B2") +
geom_point(size = 2.5, color = "#0072B2") +
scale_x_continuous(breaks = seq(min(summary_df$Trigger),
max(summary_df$Trigger),
by = 0.05)) +
labs(
title = "Mean Value of Columns by Trigger Level",
subtitle = "For m = 2.5 and Target = 1.27",
x = "Trigger Level",
y = "Mean Value of Column"
) +
theme_minimal()
summary_df <- Trigger_hit_df %>%
summarise(across(everything(), function(x)quantile(x, 0.1), na.rm = TRUE)) %>%
pivot_longer(
cols = everything(),
names_to = "Name",
values_to = "column_mean"
) %>%
mutate(
Trigger = str_split(Name, "x", simplify = TRUE)[, 3],
Trigger = as.numeric(Trigger)
)
summary_df <- Trigger_hit_df %>%
summarise(across(everything(), median, na.rm = TRUE)) %>%
pivot_longer(
cols = everything(),
names_to = "Name",
values_to = "column_mean"
) %>%
mutate(
Trigger = str_split(Name, "x", simplify = TRUE)[, 3],
Trigger = as.numeric(Trigger)
)
ggplot(summary_df, aes(x = Trigger, y = column_mean)) +
geom_line(size = 1.2, color = "#0072B2") +
geom_point(size = 2.5, color = "#0072B2") +
scale_x_continuous(breaks = seq(min(summary_df$Trigger),
max(summary_df$Trigger),
by = 0.05)) +
labs(
title = "Mean Value of Columns by Trigger Level",
subtitle = "For m = 2.5 and Target = 1.27",
x = "Trigger Level",
y = "Mean Value of Column"
) +
theme_minimal()
